name: x86_64-ubuntu2204-deploy-test

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # This yml is copied from https://github.com/hn-88/OCVWarp/blob/master/.github/workflows/cmake-nix.yml
  # and modified.
  BUILD_TYPE: Release
  # As recommended here: https://github.com/marketplace/actions/sccache-action
  SCCACHE_GHA_ENABLED: "true"
  SCCACHE_CACHE_SIZE: 5G
  CMAKE_C_COMPILER_LAUNCHER: sccache
  CMAKE_CXX_COMPILER_LAUNCHER: sccache
  OPENSPACE_VERSION: "0.21.0"
  APPIMAGE_VERSION: "1"
  # COMMIT_HASH: "releases/v0.21.0"
  COMMIT_HASH: "deploy-for-Linux"
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: true
        swap-storage: false
    
    - name: get openspace code for a particular release
      # https://docs.openspaceproject.com/releases-v0.20/contribute/development/compiling/ubuntu.html
      run: |
        openSpaceHome="$HOME/source/OpenSpace"
        git clone --recursive https://github.com/hn-88/OpenSpace "$openSpaceHome"
        cd "$openSpaceHome"
        git checkout "${COMMIT_HASH}" --recurse-submodules
        # try the latest main branch, one of the newest commits
        mkdir build
        cd build

    - name: patch for ghoul issue 23
      run: |
        openSpaceHome="$HOME/source/OpenSpace"
        mv Ghoul-include-ghoul-misc-interpolator.inl "$openSpaceHome/ext/ghoul/include/ghoul/misc/interpolator.inl" -v
        
    
    - name: Install dependencies
      # https://docs.openspaceproject.com/releases-v0.20/contribute/development/compiling/ubuntu.html
      run: |
        sudo apt update
        sudo apt install glew-utils libpng-dev freeglut3-dev git libxrandr-dev libxinerama-dev xorg-dev libxcursor-dev libcurl4-openssl-dev libxi-dev libasound2-dev libgdal-dev libboost1.74-dev qt6-base-dev libmpv-dev libvulkan-dev
        sudo apt install software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt install gcc-13 g++-13
        sudo apt-get install libasound2 libasound2-data libasound2-plugins

    - name: Enable sccache
      uses: mozilla-actions/sccache-action@v0.0.9

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        openSpaceHome="$HOME/source/OpenSpace"
        cd "$openSpaceHome/build"
        cmake -DCMAKE_BUILD_TYPE="Release" -DCMAKE_CXX_COMPILER=/usr/bin/g++-13 -DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_STANDARD=20 -DASSIMP_BUILD_MINIZIP=1 -DBUILD_TESTS=OFF -DOPENSPACE_HAVE_TESTS=OFF -DSGCT_BUILD_TESTS=OFF "$openSpaceHome"

    - name: Build
      # Build your program with the given configuration
      run: |
        openSpaceHome="$HOME/source/OpenSpace"
        cd "$openSpaceHome/build"
        # Use the system's libvulkan, not the vendored one, otherwise they might conflict
        # cef_orig_dir=$(find $HOME/source/OpenSpace/build -path */Release/libcef.so | xargs dirname)
        # rm -v $cef_orig_dir/libvulkan.so.1
        make -j $(nproc)
        
    - name: test the deploy script
      working-directory: ${{github.workspace}}
      run: |
        openSpaceHome="$HOME/source/OpenSpace"
        cd $HOME
        "$openSpaceHome/support/deploy.sh"


    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: OpenSpace-0.21.0plus-minimal
        # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: $HOME/deploy
      
    
